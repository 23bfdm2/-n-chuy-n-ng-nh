@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@inject SignInManager<AppUser> signInManager
@inject UserManager<AppUser> userManager

@{
    var user = await userManager.GetUserAsync(User);
    var isSignedIn = signInManager.IsSignedIn(User);
    var isInRoleUser = User.IsInRole("User");
}

<li class="menu-active"><a href="/">Home</a></li>
<li><a href="/job">All Jobs</a></li>
<li><a href="/company">IT Companies</a></li>
@if (isSignedIn)
{
    if (isInRoleUser)
    {
        <li><a href="/apply/@user.Id">Interview</a></li>
    }
}
<li><a href="/blog">Blog</a></li>
<li class="menu-has-children">
    <a href="">Pages</a>
    <ul>
        <li><a href="/search">search</a></li>
        <li><a href="/price">price</a></li>
        <li><a href="/about-us">about us</a></li>
        <li><a href="/contact">contact</a></li>
        <li><a href="/elements">elements</a></li>
    </ul>
</li>

@if (isSignedIn)
{
    <li>
        <a class="ticker-btn">Hi, @(user.FullName ?? user.UserName)</a>
    </li>
    <li>
        <form id="logoutForm" class="form-inline">
            <a href="/logout" class="ticker-btn">Logout</a>
        </form>
    </li>
    @*<li>
        @if (user.Status == null)
        {
            <form id="logoutForm" class="form-inline">
                <a href="/register-employer/@user.Id" class="ticker-btn">Register to Employer</a>
            </form>
        }
    </li>*@
}
else
{
    <li>
        <a href="/register" class="ticker-btn">Register</a>
    </li>
    <li>
        <a href="/login" class="ticker-btn">Login</a>
    </li>
    <li>
        <a href="/employer/login" class="ticker-btn">For Employer</a>
    </li>
}